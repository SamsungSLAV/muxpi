###########################
MuxPi software installation
###########################

.. note::

   Below manual, assumes that you have MuxPi board connected to your machine's
   local network and it is avaliable at 192.168.0.2 address. If you set another
   address or use DHCP server substitute that address for yours.

.. note ::

   It is recommended to cross-compile MuxPi's software on your host machine,
   rather than install go-toolchain on MuxPi's NanoPi NEO board.

.. highlight:: console


*****************
Building binaries
*****************

Building using docker
=====================

#. Prerequisites

   * Docker_
   * Make_

   .. _Docker: https://www.docker.com/
   .. _Make: https://www.gnu.org/software/make/

#. Clone MuxPi and go to that directory with software::

      $ git clone https://github.com/SamsungSLAV/muxpi.git && cd muxpi/sw/nanopi

#. Build MuxPi software::

      $ make docker-build

   Resulting binaries will be in ``bin`` directory.

Building from source
======================

#. Prerequisites

   * git_
   * `go (1.10+)`_

   .. _git: https://git-scm.com/
   .. _`go (1.10+)`: https://golang.org/doc/install

#. Go get it and go to muxpi directory::

      $ go get github.com/SamsungSLAV/muxpi
      $ cd $GOPATH/src/github.com/SamsungSLAV/muxpi/sw/nanopi

#. Download dependencies::

      $ go get ./...

#. Build binaries::

      $ mkdir -p bin
      $ GOARCH=arm GOOARM=7 GOOS=linux go build -o bin/muxpictl ./cmd/muxpictl/
      $ GOARCH=arm GOOARM=7 GOOS=linux go build -o bin/sflasher ./cmd/sflasher/


*****
Setup
*****

Install muxpi-power
===================

#. Copy muxpi-power files to your MuxPi::

      $ scp power/muxpi-power root@192.168.0.2:/usr/bin
      $ scp power/systemd/muxpi-power.service root@192.168.0.2:/etc/systemd/system

#. On your MuxPi device, enable and start muxpi-power service::

      # systemctl enable muxpi-power.service
      # systemctl start muxpi-power.service

   When you restart MuxPi board, you should see that after system boot, board
   comes alive - e.g. display lights up.

Install muxpictl
===========

#. Copy muxpictl binary and systemd files to MuxPi device::

      $ scp bin/muxpictl root@192.168.0.2:/usr/bin/
      $ scp muxpictl/systemd/muxpictl.service root@192.168.0.2:/etc/systemd/system
      $ scp muxpictl/systemd/muxpictl-user.socket root@192.168.0.2:/etc/systemd/system
      $ scp muxpictl/systemd/muxpictl.socket root@192.168.0.2:/etc/systemd/system
      $ scp muxpictl/muxpictl root@192.168.0.2:/usr/local/bin/muxpictl

#. On your MuxPi device - create group muxpictl and add your user (assumed to be
   ``muxpictl``::

      # groupadd muxpictl
      # usermod -aG muxpictl pi

#. On your MuxPi device - enable muxpictl sockets::

      # systemctl daemon-reload
      # systemctl enable muxpictl.socket muxpictl-user.socket
      # systemctl start muxpictl.socket muxpictl-user.socket

   .. note::

      Currently muxpictl is not safe for concurrent use and requires root to operate
      (or whoever ``/dev/ttyS2`` permissions point to). It is recommended to
      install muxpictl as an auto starting service as described above.

   .. warning::

      muxpictl.service should NOT be started manually or enabled, because when
      run through systemd, muxpictl expects to be able to obtain the aforementioned
      socket paths from systemd, which is only possible when the service is
      launched by the sockets.

Install sflasher
============

#. Copy sflasher binary to MuxPi device::

      $ scp bin/sflasher root@192.168.0.2:/usr/bin/

#. On your MuxPi device - create a symlink from ``/usr/local/bin/sflasher`` to
   ``/usr/bin/sflasher/``. Only ``/usr/local/bin/sflasher/`` should be used by software
   interfacing with MuxPi. This allows to swap sflasher implementation to your
   preferred tool::

      # ln -s /usr/bin/sflasher /usr/local/bin/sflasher

.. target-notes::

